{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStart","isReversed","setReverse","NONE","sortType","setSortType","allGoods","goods","visibleGoods","ALPABET","sort","goodA","goodB","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAeMC,EA5CR,SACEC,EACAH,EACAH,GAGA,IAAMO,EAAY,YAAOD,GAGzB,OAAQH,GACN,KAAKT,EAASc,QACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKjB,EAASmB,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAM7D,OAAOd,EACHO,EAAaQ,UACbR,EAsBaS,CACfrB,EACAQ,EACAH,GAGF,OACE,qBAAKiB,UAAU,MAAf,SACGnB,EAEG,qCACE,wBACEoB,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASc,UAFtC,iCAOA,wBACEU,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASmB,SAFtC,4BAOA,wBACEK,KAAK,SACLC,QAAS,WAnCnBlB,GAAW,SAAAmB,GAAO,OAAKA,MAiCf,qBAOA,wBACEF,KAAK,SACLC,QAAS,kBAtCnBlB,GAAW,QACXG,EAAYV,EAASQ,OAmCb,mBAOA,oBAAIe,UAAU,QAAd,SACGZ,EAASgB,KAAI,SAAAC,GAAI,OAChB,oBAAIL,UAAU,cAAd,SACGK,GAD8BA,WAQvC,wBACEJ,KAAK,SACLC,QAAS,WA/DjBpB,GAAS,IA6DH,sBClHVwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a947d9aa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((goodA, goodB) => goodA.localeCompare(goodB));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((goodA, goodB) => goodA.length - goodB.length);\n      break;\n\n    default:\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\n// DON'T save goods to the state\nexport const App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const startGoods = () => {\n    setStart(true);\n  };\n\n  const reverseGoods = () => {\n    setReverse(current => !current);\n  };\n\n  const resetGoodsOrder = () => {\n    setReverse(false);\n    setSortType(SortType.NONE);\n  };\n\n  const allGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"App\">\n      {isStarted\n        ? (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.ALPABET)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.LENGTH)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => reverseGoods()}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => resetGoodsOrder()}\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {allGoods.map(good => (\n                <li className=\"Goods__item\" key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )\n        : (\n          <button\n            type=\"button\"\n            onClick={() => startGoods()}\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}